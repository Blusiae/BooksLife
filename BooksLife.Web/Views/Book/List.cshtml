@using BooksLife.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model IPagedList<BookViewModel>;

@if (Model is not null)
{
    ViewData["Title"] = "List of Books";

    @if (!(ViewBag.Response.Message == ""))
    {
        <div class="alert @(ViewBag.Response.Succeed ? "alert-success" : "alert-danger")">
            @ViewBag.Response.Message
        </div>
    }

    <h1>List of books</h1>

    <hr />

    <a class="text-success fw-bold text-decoration-none float-start mt-1" asp-controller="Book" asp-action="Add"><small>+ Add new</small></a>
    <form asp-controller="Book" asp-action="List">
        <div class="input-group w-25 float-end">
            <input type="text" class="form-control" placeholder="Search by title" aria-label="search" aria-describedby="search-button" name="filterString" value="@ViewBag.FilterString">
            <button type="submit" class="btn btn-outline-secondary" id="search-button"><i class="bi bi-search"></i></button>
        </div>
    </form>


    <table class="table table-hover">
        <thead class="thead-light">
            <tr>
                <th>Title</th>
                <th>Year of publication</th>
                <th>Year of edition publication</th>
                <th>Author <a asp-controller="Author" asp-action="List" class="text-primary"><i class="bi bi-pencil-square" title="Manage authors"></i></a></th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Model)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.PublicationYear</td>
                    <td>@book.EditionPublicationYear</td>
                    <td>@book.AuthorName</td>
                    <td>
                        <a class="btn btn-sm transparent" title="Show details" asp-controller="Book" asp-action="Index" asp-route-id="@book.Id">
                            <i class="bi bi-info-circle text-primary"></i>
                        </a>
                        <a class="btn btn-sm transparent" title="Remove" asp-controller="Book" asp-action="Remove" asp-route-id="@book.Id">
                            <i class="bi bi-trash text-danger"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>


    <p class="float-end">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</p>
    <div class="d-flex justify-content-center">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("List", new { page, ViewBag.FilterString }), new PagedListRenderOptions{
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
    </div>

}